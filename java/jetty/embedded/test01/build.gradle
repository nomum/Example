/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.5/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'application'
    id 'war'
}
//apply plugin: 'war'
//apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
    //compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.14.v20181114'
    // https://mvnrepository.com/artifact/org.eclipse.jetty.aggregate/jetty-all
    compile group: 'org.eclipse.jetty.aggregate', name: 'jetty-all', version: '9.4.14.v20181114', ext: 'pom'
    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-webapp
    compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.4.14.v20181114'
    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-annotations
    compile group: 'org.eclipse.jetty', name: 'jetty-annotations', version: '9.4.14.v20181114'


}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}





mainClassName = 'sample.jetty.Main'
war {
    baseName = 'sample'

    from {
        configurations.providedCompile.collect {
            it.isDirectory() ? it : project.zipTree(it)
        }
    }
    from fileTree(dir: 'build/classes/java/main', include: '**/Main.class')

    manifest.attributes('Main-Class': 'sample.jetty.Main')
}