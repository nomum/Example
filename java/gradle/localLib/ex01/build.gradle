/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'eclipse'
}
def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile)*.options*.encoding = defaultEncoding
tasks.withType(GroovyCompile)*.groovyOptions*.encoding = defaultEncoding

// Define the main class for the application
mainClassName = 'App'

def localLibUse = true
//def localLibUse = false

def offlineCompileDir = 'offline/compile'
def offlineTestCompileDir = 'offline/test'

// In this section you declare where to find the dependencies of your project
repositories {

    mavenCentral()
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}

// Gradleの依存ライブラリをローカルに書き出す
task copyDependencies(type:Copy) {
    println 'call copyDependencies'
    from (configurations.compile)
    //into 'offline/compile' 
    into offlineCompileDir
}

task copyTestDependencies(type:Copy) {
    println 'call copyDependencies'
    println localLibUse
    from (configurations.testCompile)
    //into 'offline/test' 
    into offlineTestCompileDir
}


//task compile << {
//    println 'compiling classes'
//}

task list(dependsOn: configurations.compile) << {
    println "classpath = ${configurations.compile.collect {File file -> file.name}}"
}
task hello(){
    println 'call hello'
    println project
    println project.name
    
}

dependencies {
    println 'call dependencies'
    if (localLibUse){
        println 'copy dependencies'
        // ■offline用の依存参照
        //compile fileTree(dir: 'offline/libs', include: '*.jar')
        compile fileTree(dir: offlineCompileDir, include: '*.jar')
        //comiple fileTree(dir: offlineCompileDir , include: '*.jar')
        testCompile fileTree(dir: offlineTestCompileDir , include: '*.jar')
        //testCompile fileTree(dir: 'offline/testlibs', include: '*.jar')
        //testCompile fileTree(dir: 'offline/testlibs', include: '*.jar')
    }else {
        println 'none copy dependencies'

        // This dependency is found on compile classpath of this component and consumers.
        compile 'com.google.guava:guava:23.0'

        // Use JUnit test framework
        testCompile 'junit:junit:4.12'

    }


}